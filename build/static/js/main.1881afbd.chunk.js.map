{"version":3,"sources":["Components/UploadFile.js","Components/Result.js","App.js","index.js"],"names":["UploadFile","useState","newFile","SetNewFile","resultData","SetResultData","redirect","SetRedirect","history","useHistory","Grid","textAlign","style","height","verticalAlign","Column","maxWidth","Header","as","color","Form","onSubmit","console","log","size","Segment","stacked","Field","id","type","onChange","event","target","files","accept","Button","onClick","formData","FormData","append","axios","post","headers","then","response","data","catch","err","fluid","push","pathname","state","disabled","Result","props","location","useLocation","rawdata","content_rating_score","overall_rating_score","presenting_skills_rating_score","overall_sentiment_score","labels","Object","keys","datasets","label","values","backgroundColor","borderColor","borderWidth","data1","data2","data3","componentRef","useRef","trigger","href","content","current","class","ref","width","className","App","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1881afbd.chunk.js","sourcesContent":["import React,{useState} from 'react'\r\nimport axios from 'axios';\r\nimport { Button, Form, Grid, Header, Image, Message, Segment } from 'semantic-ui-react'\r\nimport Loader from 'react-loaders'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nconst UploadFile = () =>{\r\n    \r\n    const [newFile, SetNewFile] = useState([]); \r\n    const [resultData, SetResultData] = useState([{\"hello\":\"1\"}]); \r\n    const [redirect, SetRedirect] = useState(false); \r\n    const history = useHistory();\r\n    let loader = <Loader type=\"ball-scale-ripple-multiple\" />\r\n\r\n    const clickHandler = () => {\r\n      \r\n      // SetResultData([{\"content_rating_score\":{\"excellent\":8,\"fair\":1,\"good\":3,\"poor\":0,\"very_good\":6},\"overall_rating_score\":{\"excellent\":8,\"fair\":0,\"good\":3,\"poor\":0,\"very_good\":7},\"overall_sentiment_score\":{\"negative\":1,\"neutral\":0,\"positive\":17},\"presenting_skills_rating_score\":{\"excellent\":9,\"fair\":0,\"good\":2,\"poor\":0,\"very_good\":7},\"total_reviews\":18}])\r\n      // setTimeout(function(){\r\n        //   history.push({\r\n          //     pathname:'/result',\r\n          //     state:resultData\r\n          //   })\r\n          // },10000)\r\n          let formData= new FormData();\r\n          formData.append(\"file\", newFile);\r\n          axios.post('https://ttr-reports-generator.herokuapp.com/api/upload_csv_file', formData, {\r\n            headers: {\r\n              \"Access-Control-Allow-Origin\": \"*\",\r\n            },\r\n          })\r\n          .then((response)=>{\r\n            response.data ? SetResultData(response.data) : console.log(\"No data recd\")\r\n            SetRedirect(true)\r\n    })\r\n    .catch((err=>{\r\n      console.log(err)\r\n    }))\r\n\r\n    }\r\n    \r\n    const clickHandler2 =  ()=>{\r\n      history.push({\r\n      pathname:'/result',\r\n      state:resultData\r\n    })\r\n  }\r\n\r\n\r\n    const fileChange = (event) => {\r\n        SetNewFile( event.target.files[0] );\r\n     };\r\n\r\n    const onFormSubmit = () =>{\r\n    console.log(newFile);\r\n    }\r\n\r\n    return(\r\n    <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\r\n    <Grid.Column style={{ maxWidth: 450 }}>\r\n      <Header as='h2' color='teal' textAlign='center'>\r\n         Tech Tuesday Reviews Analysis\r\n      </Header>\r\n      <Form onSubmit={onFormSubmit} size='large'>\r\n        <Segment stacked>\r\n          {/* <Form.Input fluid icon='file' iconPosition='right' placeholder='Select File' /> */}\r\n          <Form.Field>\r\n            <label>Upload file</label>\r\n            <input \r\n            id=\"file\"\r\n            type=\"file\"\r\n            onChange={fileChange}\r\n            accept=\".csv, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\r\n            />\r\n        </Form.Field>\r\n          {/* <Button type=\"submit\" color='teal' fluid size='large'> */}\r\n          <Button onClick={clickHandler} color='teal' fluid size='large'>\r\n            Upload\r\n          </Button>\r\n          <br/>\r\n          <Button onClick={clickHandler2} color='teal' fluid size='large' disabled={!redirect}>\r\n            Generate Result\r\n          </Button>\r\n        </Segment>\r\n      </Form>\r\n    </Grid.Column>\r\n  </Grid> \r\n    )\r\n}\r\n\r\nexport default UploadFile;\r\n","import React, { useState , useRef} from \"react\";\r\nimport \"../result.css\";\r\nimport { Pie, Bar } from \"react-chartjs-2\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport ReactToPrint from \"react-to-print\";\r\n\r\nconst Result = (props) => {\r\n  const location = useLocation();\r\n  const [rawdata, setrawData] = useState(location.state);\r\n  let content_rating_score = rawdata[0].content_rating_score;\r\n  let overall_rating_score = rawdata[0].overall_rating_score;\r\n  let presenting_skills_rating_score =\r\n    rawdata[0].presenting_skills_rating_score;\r\n  let overall_sentiment_score = rawdata[0].overall_sentiment_score;\r\n  console.log(content_rating_score);\r\n  const data = {\r\n    labels: Object.keys(content_rating_score),\r\n    datasets: [\r\n      {\r\n        label: \"Content Rating\",\r\n        data: Object.values(content_rating_score),\r\n        backgroundColor: [\r\n          \"rgba(255, 99, 132, 0.2)\",\r\n          \"rgba(54, 162, 235, 0.2)\",\r\n          \"rgba(255, 206, 86, 0.2)\",\r\n          \"rgba(75, 192, 192, 0.2)\",\r\n          \"rgba(153, 102, 255, 0.2)\",\r\n        ],\r\n        borderColor: [\r\n          \"rgba(255, 99, 132, 1)\",\r\n          \"rgba(54, 162, 235, 1)\",\r\n          \"rgba(255, 206, 86, 1)\",\r\n          \"rgba(75, 192, 192, 1)\",\r\n          \"rgba(153, 102, 255, 1)\",\r\n        ],\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n  const data1 = {\r\n    labels: Object.keys(overall_rating_score),\r\n    datasets: [\r\n      {\r\n        label: \"Overall rating Score\",\r\n        data: Object.values(overall_rating_score),\r\n        backgroundColor: [\r\n          \"rgba(255, 99, 132, 0.2)\",\r\n          \"rgba(54, 162, 235, 0.2)\",\r\n          \"rgba(255, 206, 86, 0.2)\",\r\n          \"rgba(75, 192, 192, 0.2)\",\r\n          \"rgba(153, 102, 255, 0.2)\",\r\n        ],\r\n        borderColor: [\r\n          \"rgba(255, 99, 132, 1)\",\r\n          \"rgba(54, 162, 235, 1)\",\r\n          \"rgba(255, 206, 86, 1)\",\r\n          \"rgba(75, 192, 192, 1)\",\r\n          \"rgba(153, 102, 255, 1)\",\r\n        ],\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n  const data2 = {\r\n    labels: Object.keys(presenting_skills_rating_score),\r\n    datasets: [\r\n      {\r\n        label: \"Content Rating\",\r\n        data: Object.values(presenting_skills_rating_score),\r\n        backgroundColor: [\r\n          \"rgba(255, 99, 132, 0.2)\",\r\n          \"rgba(54, 162, 235, 0.2)\",\r\n          \"rgba(255, 206, 86, 0.2)\",\r\n          \"rgba(75, 192, 192, 0.2)\",\r\n          \"rgba(153, 102, 255, 0.2)\",\r\n        ],\r\n        borderColor: [\r\n          \"rgba(255, 99, 132, 1)\",\r\n          \"rgba(54, 162, 235, 1)\",\r\n          \"rgba(255, 206, 86, 1)\",\r\n          \"rgba(75, 192, 192, 1)\",\r\n          \"rgba(153, 102, 255, 1)\",\r\n        ],\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const data3 = {\r\n    labels: Object.keys(overall_sentiment_score),\r\n    datasets: [\r\n      {\r\n        label: \"# of Votes\",\r\n        data: Object.values(overall_sentiment_score),\r\n        backgroundColor: [\r\n          \"rgba(255, 99, 132, 0.2)\",\r\n          \"rgba(54, 162, 235, 0.2)\",\r\n          \"rgba(255, 206, 86, 0.2)\",\r\n          \"rgba(75, 192, 192, 0.2)\",\r\n          \"rgba(153, 102, 255, 0.2)\",\r\n          \"rgba(255, 159, 64, 0.2)\",\r\n        ],\r\n        borderColor: [\r\n          \"rgba(255, 99, 132, 1)\",\r\n          \"rgba(54, 162, 235, 1)\",\r\n          \"rgba(255, 206, 86, 1)\",\r\n          \"rgba(75, 192, 192, 1)\",\r\n          \"rgba(153, 102, 255, 1)\",\r\n          \"rgba(255, 159, 64, 1)\",\r\n        ],\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const componentRef = useRef();\r\n\r\n  return (\r\n    <>\r\n    <ReactToPrint\r\n    trigger={() => <a href=\"javascript:void\">Print this out!</a>}\r\n    content={() => componentRef.current}\r\n  />\r\n    <div class=\"piechartbackground\" ref={componentRef}>\r\n      <div class=\"ui grid\" >\r\n        <div class=\"four wide computer sixteen wide mobile eight wide tablet column Tlabel\">\r\n          <div class=\"ui segment\">\r\n            <Pie data={data} width={100} height={100} />\r\n          </div>\r\n          <label className=\"TlabelA\">Content Rating Score</label>\r\n        </div>\r\n        <div class=\"four wide computer sixteen wide mobile eight wide tablet column Tlabel\">\r\n          <div class=\"ui segment\">\r\n            <Pie data={data1} width={100} height={100} />\r\n          </div>\r\n          <label className=\"TlabelA\">Overall Rating Score</label>\r\n        </div>\r\n        <div class=\"four wide computer sixteen wide mobile eight wide tablet column Tlabel\">\r\n          <div class=\"ui segment\">\r\n            <Pie data={data2} width={100} height={100} />\r\n          </div>\r\n          <label className=\"TlabelA\">Presenting Skills Rating Score</label>\r\n        </div>\r\n        <div class=\"four wide computer sixteen wide mobile eight wide tablet column Tlabel\">\r\n          <div class=\"ui segment\">\r\n            <Bar data={data3} id=\"overall Sentiment\" width={100} height={100} />\r\n          </div>\r\n          <label className=\"TlabelA\">Overall Sentiment Score</label>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Result;\r\n","import {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\nimport UploadFile from \"./Components/UploadFile\";\r\nimport Result  from \"./Components/Result\"\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n    <>\r\n    <Switch>\r\n    <Route path=\"/result\">\r\n      <Result />\r\n    </Route>\r\n    <Route path=\"/\">\r\n      <UploadFile />\r\n    </Route>\r\n  </Switch>\r\n</>\r\n</Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport 'semantic-ui-css/semantic.min.css'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}